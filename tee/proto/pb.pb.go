// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: pb.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	HistoryKeyDiscard bool                   `protobuf:"varint,1,opt,name=HistoryKeyDiscard,proto3" json:"HistoryKeyDiscard,omitempty"`
	KeyRotation       uint32                 `protobuf:"varint,2,opt,name=KeyRotation,proto3" json:"KeyRotation,omitempty"`
	ACL               []string               `protobuf:"bytes,3,rep,name=ACL,proto3" json:"ACL,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	mi := &file_pb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{0}
}

func (x *UserConfig) GetHistoryKeyDiscard() bool {
	if x != nil {
		return x.HistoryKeyDiscard
	}
	return false
}

func (x *UserConfig) GetKeyRotation() uint32 {
	if x != nil {
		return x.KeyRotation
	}
	return 0
}

func (x *UserConfig) GetACL() []string {
	if x != nil {
		return x.ACL
	}
	return nil
}

type Info struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Keys              []string               `protobuf:"bytes,1,rep,name=Keys,proto3" json:"Keys,omitempty"`
	CodeKey           string                 `protobuf:"bytes,2,opt,name=CodeKey,proto3" json:"CodeKey,omitempty"`
	HistoryKeyDiscard bool                   `protobuf:"varint,3,opt,name=HistoryKeyDiscard,proto3" json:"HistoryKeyDiscard,omitempty"`
	KeyRotation       uint32                 `protobuf:"varint,4,opt,name=KeyRotation,proto3" json:"KeyRotation,omitempty"`
	ACL               []string               `protobuf:"bytes,5,rep,name=ACL,proto3" json:"ACL,omitempty"`
	ExecutionCount    uint32                 `protobuf:"varint,6,opt,name=ExecutionCount,proto3" json:"ExecutionCount,omitempty"`
	Nounce            uint32                 `protobuf:"varint,7,opt,name=Nounce,proto3" json:"Nounce,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Info) Reset() {
	*x = Info{}
	mi := &file_pb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{1}
}

func (x *Info) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *Info) GetCodeKey() string {
	if x != nil {
		return x.CodeKey
	}
	return ""
}

func (x *Info) GetHistoryKeyDiscard() bool {
	if x != nil {
		return x.HistoryKeyDiscard
	}
	return false
}

func (x *Info) GetKeyRotation() uint32 {
	if x != nil {
		return x.KeyRotation
	}
	return 0
}

func (x *Info) GetACL() []string {
	if x != nil {
		return x.ACL
	}
	return nil
}

func (x *Info) GetExecutionCount() uint32 {
	if x != nil {
		return x.ExecutionCount
	}
	return 0
}

func (x *Info) GetNounce() uint32 {
	if x != nil {
		return x.Nounce
	}
	return 0
}

type GolangInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FuncName      string                 `protobuf:"bytes,1,opt,name=FuncName,proto3" json:"FuncName,omitempty"`
	Args          []byte                 `protobuf:"bytes,2,opt,name=Args,proto3" json:"Args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GolangInput) Reset() {
	*x = GolangInput{}
	mi := &file_pb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GolangInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GolangInput) ProtoMessage() {}

func (x *GolangInput) ProtoReflect() protoreflect.Message {
	mi := &file_pb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GolangInput.ProtoReflect.Descriptor instead.
func (*GolangInput) Descriptor() ([]byte, []int) {
	return file_pb_proto_rawDescGZIP(), []int{2}
}

func (x *GolangInput) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *GolangInput) GetArgs() []byte {
	if x != nil {
		return x.Args
	}
	return nil
}

var File_pb_proto protoreflect.FileDescriptor

var file_pb_proto_rawDesc = string([]byte{
	0x0a, 0x08, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x6e,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x11,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x65,
	0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x41, 0x43, 0x4c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x41, 0x43, 0x4c, 0x22, 0xd6,
	0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x64, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x44, 0x69, 0x73, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x41, 0x43, 0x4c, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x4e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x47, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pb_proto_rawDescOnce sync.Once
	file_pb_proto_rawDescData []byte
)

func file_pb_proto_rawDescGZIP() []byte {
	file_pb_proto_rawDescOnce.Do(func() {
		file_pb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_proto_rawDesc), len(file_pb_proto_rawDesc)))
	})
	return file_pb_proto_rawDescData
}

var file_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_proto_goTypes = []any{
	(*UserConfig)(nil),  // 0: pb.UserConfig
	(*Info)(nil),        // 1: pb.Info
	(*GolangInput)(nil), // 2: pb.GolangInput
}
var file_pb_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_proto_init() }
func file_pb_proto_init() {
	if File_pb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_proto_rawDesc), len(file_pb_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_proto_goTypes,
		DependencyIndexes: file_pb_proto_depIdxs,
		MessageInfos:      file_pb_proto_msgTypes,
	}.Build()
	File_pb_proto = out.File
	file_pb_proto_goTypes = nil
	file_pb_proto_depIdxs = nil
}
